char val;
 
void setup() {
  pinMode(2, OUTPUT);
  pinMode(3, OUTPUT);
  pinMode(4, OUTPUT);
  pinMode(5, OUTPUT);
  pinMode(6, OUTPUT);
  pinMode(7, OUTPUT);
  pinMode(8, OUTPUT);
  pinMode(9, OUTPUT);
  pinMode(10, OUTPUT);
  pinMode(11, OUTPUT);
//  digitalWrite(11, LOW);
//  digitalWrite(2, LOW);
//  digitalWrite(3, LOW);
//  digitalWrite(4, LOW);
//  digitalWrite(5, LOW);
//  digitalWrite(6, LOW);
//  digitalWrite(7, LOW);
//  digitalWrite(8, LOW);
//  digitalWrite(9, LOW);
//  digitalWrite(10, LOW);
  digitalWrite(11, HIGH);
  digitalWrite(2, HIGH);
  digitalWrite(3, HIGH);
  digitalWrite(4, HIGH);
  digitalWrite(5, HIGH);
  digitalWrite(6, HIGH);
  digitalWrite(7, HIGH);
  digitalWrite(8, HIGH);
  digitalWrite(9, HIGH);
  digitalWrite(10, HIGH);
  Serial.begin(9600);
}
 
void loop() {
  if (Serial.available()) { // If data is available to read,
    val = Serial.read(); // read it and store it in val
  }
  if (val == 'A') {
    digitalWrite(2, HIGH);
  } else if (val == 'B') {
    digitalWrite(2, LOW);
  } else if (val == 'C') {
    digitalWrite(3, HIGH);
  } else if (val == 'D') {
    digitalWrite(3, LOW);
  } else if (val == 'E') {
    digitalWrite(4, HIGH);
  } else if (val == 'F') {
    digitalWrite(4, LOW);
  } else if (val == 'G') {
    digitalWrite(5, HIGH);
  } else if (val == 'H') {
    digitalWrite(5, LOW);
  } else if (val == 'I') {
    digitalWrite(6, HIGH);
  } else if (val == 'J') {
    digitalWrite(6, LOW);
  } else if (val == 'K') {
    digitalWrite(7, HIGH);
  } else if (val == 'L') {
    digitalWrite(7, LOW);
  } else if (val == 'M') {
    digitalWrite(8, HIGH);
  } else if (val == 'N') {
    digitalWrite(8, LOW); 
  } else if (val == 'O') {
    digitalWrite(9, HIGH);
  } else if (val == 'P') {
    digitalWrite(9, LOW); // turn the LED 2 off
  } else if (val == 'Q') {
    digitalWrite(10, HIGH);
  } else if (val == 'R') {
    digitalWrite(10, LOW);
  } else if (val == 'S') {
    digitalWrite(11, HIGH);
  } else if (val == 'T') {
    digitalWrite(11, LOW);
  } 
  delay(100); // Wait 100 milliseconds for next reading
}

